subprojects {
	configure([project(":Api"), project(":Core"), project(":Common"), project(":GWTClientCore"), project(":GWTClientApi"), project(":GWTWebView"), project(":GWTCoreModules"), project(":Agent")]) {
		apply plugin: 'java'
		apply plugin: 'eclipse'
	}
	
	dependencies {
		testCompile 'junit:junit:4.12'
	}

	repositories {
		jcenter()
	}
}

def targetDir = "target"

task copyClientCore(type: Copy) {
	evaluationDependsOn(":GWTClientCore")
	dependsOn(":GWTClientCore:compileGwt")
	from project(":GWTClientCore").file("war")
	into file("target/public")
}

task copyWebView(type: Copy) {
	evaluationDependsOn(":GWTWebView")
	dependsOn(":GWTWebView:compileGwt")
	from project(":GWTWebView").file("war/webview")
	into file("target/modules/webview")
}

task copyModules(type: Copy) {
	evaluationDependsOn(":GWTCoreModules")
	dependsOn(":GWTCoreModules:compileGwt")
	from project(":GWTCoreModules").file("war/coremodules")
	into file("target/modules/coremodules/")
}

task copyCore(type: Copy) {
	evaluationDependsOn(":Core")
	dependsOn(":Core:installDist")
	
	def installPath = project(":Core").buildDir.getAbsolutePath() + "/install/" + project(":Core").applicationName
	from file(installPath)
	into file(targetDir)
}

task copyBuild(type: Copy) {
	delete targetDir
	dependsOn 'copyCore'
	dependsOn 'copyClientCore'
	dependsOn 'copyWebView'
	dependsOn 'copyModules'
}

task build() {
	dependsOn 'copyBuild'
}

task runServer(type: Exec) {
	evaluationDependsOn(":Core")
	dependsOn 'build'
	
	workingDir targetDir
	if (System.getProperty('os.name').toLowerCase().contains('windows')) {
    	commandLine 'cmd', '/c', 'bin\\' + project(":Core").applicationName + ".bat"
	} else {
	    commandLine "./ " + 'bin/' + project(":Core").applicationName
	}
}

task clean() {
	doLast {
		delete targetDir
	}
}